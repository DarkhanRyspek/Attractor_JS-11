-- MgrScript_iban-card TPLAN
begin
  FOR c IN (
         /* SELECT W.ID1 AS main_acc_id
             FROM SBERBANK_CUST.TEMP_WT W,OWS.ACNT_CONTRACT A
            WHERE W.INFORM = 'MIGR_VISAPLATSAL_050521_OLD' AND W.ADD_DATA2='MIGR0'
                  AND A.AMND_STATE='A' AND A.ID=W.ID1
                  AND OWS.XWACNT_CONTRACT('PRODUCT',A.PRODUCT) NOT LIKE '%TPLAN%'*/
           SELECT A.ID AS main_acc_id
             FROM OWS.ACNT_CONTRACT A
            WHERE A.AMND_STATE='A' 
                  --AND OWS.XWACNT_CONTRACT('PRODUCT',A.PRODUCT) NOT LIKE '%TPLAN%'
                  AND A.ID IN (13835284) 
 )
  LOOP
    ows.opt_tplan_migr.migr_to_tplan_by_acc(p_acc_id => C.MAIN_ACC_ID,p_ap_name => 'VIP');
    --ows.opt_tplan_migr.migr_to_tplan_by_acc(p_acc_id => C.MAIN_ACC_ID,p_ap_name => 'DIGITAL');
  END LOOP;  
end;








-- MgrScript_Set_Classif_TPLAN
DECLARE
  LocalDate  dtype. CurrentDate %TYPE;
  SkipReason dtype. ErrorMessage %TYPE;
  StatusID   dtype. RecordID %TYPE;
  ValueID    dtype. RecordID %TYPE;
  ErrMsg     dtype. ErrorMessage %TYPE;
  RetCode    dtype. Counter      %Type;
BEGIN
  RetCode := stnd.PROCESS_START('MgrScript_Set_Classif_TPALN', 'CustVer=20201207-001', stnd.Yes);
  LocalDate := glob.GET_DB_DATE_WS;
  FOR CUR IN (
 SELECT A.ID AS main_acc_id, A.CONTRACT_NUMBER,
       OWS.DECR.GET_STATUS_CODE(A.ID,NULL,NULL,'TARIFF_PLAN') AS CLS
  FROM SBERBANK_CUST.TEMP_WT W,OWS.ACNT_CONTRACT A
 WHERE W.INFORM = 'MIGR_VISAPLATSAL_050521_OLD' AND W.ADD_DATA2='MIGR0'
       AND A.AMND_STATE='A' AND A.ID=W.ID2 AND A.IS_READY='Y'
       AND SUBSTR(A.CONTRACT_NUMBER,1,1)='4'
       AND OWS.XWACNT_CONTRACT('PARENT_PRODUCT',A.PARENT_PRODUCT) LIKE '%TPLAN%'
       AND OWS.DECR.GET_STATUS_CODE(A.ID,NULL,NULL,'TARIFF_PLAN') IN ('TP VISA PLATINUM PAID')  /*TP VISA INFINIT BRILL PAID*/
)
  LOOP
    decr.GET_STATUS_VALUE(CUR.MAIN_ACC_ID, NULL, NULL, 'TARIFF_PLAN', 'TP VISA PLATINUM FREE',   /* TP VISA PLATINUM FREE */
                              StatusID, ValueID, ErrMsg);
          decr.SET_STATUS(CUR.MAIN_ACC_ID, NULL, NULL, StatusID, ValueID, 
                          NULL, NULL, NULL, NULL, 
                          'Custom start CS for Product', SkipReason);
          stnd.PROCESS_MESSAGE(stnd.Information, 'Set AutoClose Status for contract_id = ' || CUR.MAIN_ACC_ID);
  
  END LOOP;
    stnd.PROCESS_END;
  END;











-- MgrScript_ActiveteSMS-ActivateFee
-- Анонимная процедура для переподключения SMS
BEGIN
  FOR rec IN (
    
    SELECT A.ID AS card_id
  FROM SBERBANK_CUST.TEMP_WT W,OWS.ACNT_CONTRACT A
 WHERE W.INFORM = 'MIGR_VISAPLATSAL_050521_OLD' AND W.ADD_DATA2='MIGR0'
       AND A.AMND_STATE='A' AND A.ID=W.ID2 AND A.IS_READY='Y'
       AND OWS.XWACNT_CONTRACT('PARENT_PRODUCT',A.PARENT_PRODUCT) LIKE '%TPLAN%'
   
      /* SELECT a.id  card_id
             FROM OWS.ACNT_CONTRACT A
            WHERE A.AMND_STATE='A' 
                  AND A.ID IN (47147841,28090400,16483207)     */
             )
  LOOP
  
    DECLARE
      add_sms1_by_migr number := null;
      mb_loy_period_by_migr number := null;
      mb_loy_period_prev_migr number := null;
      v_usage_action_id number := null;
      V_ORIG_END_DATE varchar2(20) := null;
      v_ErrMsg varchar2(400);
      v_sqlerrm varchar2(800);
    BEGIN

      select u.id 
      into add_sms1_by_migr
        from ows.usage_action u
       where u.acnt_contract__id = rec.card_id
         and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' and t.name = 'ADD_SMS1')
         and u.start_date=(select g.local_date from ows.global_constants g where g.amnd_state='A')
         and u.event_details like '%Переподключение SMS после изменения продукта%' and u.posting_status='S';  

      select u.id 
      into mb_loy_period_by_migr
        from ows.usage_action u
       where u.usage_action__oid = add_sms1_by_migr
         and u.POSTING_STATUS='S'
         and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' and t.name = 'MB_LOY_PERIOD 3');
 
      --Был ли льготный период по SMS на момент миграции
      begin
        select u.id 
        into mb_loy_period_prev_migr
          from ows.usage_action u
         where u.acnt_contract__id = rec.card_id 
           and u.id<>mb_loy_period_by_migr
           and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' and t.name = 'MB_LOY_PERIOD 3')
           and u.end_date=(select g.local_date from ows.global_constants g where g.amnd_state='A');
            -------Добавить в условие статус MB_LOY_PERIOD
      exception
        when no_data_found
          then null;
      end;     

      IF mb_loy_period_prev_migr is not null 
        THEN 
          --с mb_loy_period_prev_migr вытащить ORIG_END_DATE
          select sy_convert.GET_TAG_VALUE(u.event_details, 'ORIG_END_DATE') ORIG_END_DATE
          INTO  V_ORIG_END_DATE
          from ows.usage_action u 
          where u.id=mb_loy_period_prev_migr;
          
          --запустить MB_MONTHLY_FEE датой ORIG_END_DATE
          v_usage_action_id := EVNT.QUE_EVENT_D(85, rec.card_id, null, null, null, to_date(V_ORIG_END_DATE, 'yyyy-mm-dd'), 'Переподключение SMS с корректной датой');
          
          --закрыть mb_loy_period_by_migr
          v_ErrMsg := evnt.REVERSE_EVENT_MAN(mb_loy_period_by_migr);
      ELSIF mb_loy_period_prev_migr is null 
        THEN 
          --выбрать последний MB_MONTHLY_FEE, вытащить ORIG_END_DATE. MB_MONTHLY_FEE с End_date - дата миграции
          select sy_convert.GET_TAG_VALUE(u.event_details, 'ORIG_END_DATE') ORIG_END_DATE 
          into V_ORIG_END_DATE
          from ows.usage_action u
          where u.acnt_contract__id = rec.card_id 
          and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' and t.name = 'MB_MONTHLY_FEE')
          and u.end_date=(select g.local_date from ows.global_constants g where g.amnd_state='A')
          and u.POSTING_STATUS='C';

          --запустить MB_MONTHLY_FEE датой ORIG_END_DATE
          v_usage_action_id := EVNT.QUE_EVENT_D(85, rec.card_id, null, null, null, to_date(V_ORIG_END_DATE, 'yyyy-mm-dd'), 'Переподключение SMS с корректной датой');
          
          --закрыть mb_loy_period_by_migr
          v_ErrMsg := evnt.REVERSE_EVENT_MAN(mb_loy_period_by_migr);
      END IF;
    
      COMMIT;
      
    EXCEPTION
      WHEN OTHERS
        THEN 
          v_sqlerrm := sqlerrm;
          INSERT INTO OPT_TMP_TPLAN_MIGR_LOG
          (proc_date, acnt_contract_id, status, error_level, msg)
          values
          (sysdate, rec.card_id, 'MB_FEE', 'INFO', SUBSTR(v_sqlerrm || ' > ' || dbms_utility.format_error_backtrace, 1, 380));
          COMMIT;
        
    END;  
      
  END LOOP;
END;













-- MgrScript_ActiveteFEE
-- Анонимная процедура для переподключения FEE
BEGIN
  FOR REC IN (
             SELECT A.ID AS card_id
  FROM SBERBANK_CUST.TEMP_WT W,OWS.ACNT_CONTRACT A
 WHERE W.INFORM = 'MIGR_VISAPLATSAL_050521_OLD' AND W.ADD_DATA2='MIGR0'
       AND A.AMND_STATE='A' AND A.ID=W.ID2 AND A.IS_READY='Y'
       AND OWS.XWACNT_CONTRACT('PARENT_PRODUCT',A.PARENT_PRODUCT) LIKE '%TPLAN%'
       /*SELECT a.id  card_id
             FROM OWS.ACNT_CONTRACT A
            WHERE A.AMND_STATE='A' 
                  AND A.ID IN (47147841,28090400,16483207)  */
             )
  LOOP    
  
  DECLARE
  USGOLD_ID number := null;
  USGOLD_DATES varchar2(20) := null;
  USGOLD_DATEE varchar2(20) := null;
  USGNEW_ID number := null;
  v_usage_action_id number := null;
  v_ErrMsg varchar2(400);
  v_sqlerrm varchar2(800);
  BEGIN
    /*НАБОР ДАННЫХ*/
    SELECT T.ID_U,T.ST_DATE,T.END_DATE
    INTO USGOLD_ID,USGOLD_DATES,USGOLD_DATEE    
    FROM( select U.ID AS ID_U,TO_CHAR(U.START_DATE,'YYYY-MM-DD') AS ST_DATE,sy_convert.GET_TAG_VALUE(u.event_details, 'ORIG_END_DATE') AS END_DATE
                from ows.usage_action u
               where u.acnt_contract__id = REC.CARD_ID
                     AND U.POSTING_STATUS IN ('C')
                     and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' 
                                          and t.name IN ('Activate Monthly Fee'))
          UNION ALL
          select U.ID AS ID_U,TO_CHAR(U.START_DATE,'YYYY-MM-DD') AS ST_DATE,TO_CHAR(U.END_DATE,'YYYY-MM-DD') AS END_DATE
                from ows.usage_action u
               where u.acnt_contract__id = REC.CARD_ID
                     AND U.POSTING_STATUS IN ('S')
                     and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' 
                                          and t.name IN ('Card Fee Monthly')))T;
    
     UPDATE OWS.USAGE_ACTION U1
        SET U1.POSTING_STATUS='C'
      WHERE U1.ID=USGOLD_ID;

     v_usage_action_id := EVNT.QUE_EVENT_D(10024, rec.card_id, null, null, null, TO_DATE(USGOLD_DATEE,'YYYY-MM-DD'), 'Переподключение Fee с корректной датой');
    
                                
   /* select U.ID
      INTO USGNEW_ID
      from ows.usage_action u
     where u.acnt_contract__id = REC.CARD_ID AND U.POSTING_STATUS='S'
           and u.event_type in (select t.id from ows.event_type t where t.amnd_state = 'A' and t.name IN ('Activate Monthly Fee -2YEARLY'));

    CLOSE Activate Monthly Fee -2YEARLY
    v_ErrMsg := evnt.REVERSE_EVENT_MAN(USGNEW_ID);*/
  
  /*DBMS_OUTPUT.put_line(REC.CARD_ID||' / '||USGOLD_ID||' / '||USGOLD_DATES||' / '||USGOLD_DATEE||' * '||USGNEW_ID||' - '||v_ErrMsg||' - '||v_usage_action_id);  */
  COMMIT;
      
    EXCEPTION
      WHEN OTHERS
        THEN 
          v_sqlerrm := sqlerrm;
          INSERT INTO OPT_TMP_TPLAN_MIGR_LOG
          (proc_date, acnt_contract_id, status, error_level, msg)
          values
          (sysdate, rec.card_id, 'CARD_FEE', 'INFO', SUBSTR(v_sqlerrm || ' > ' || dbms_utility.format_error_backtrace, 1, 380));
          COMMIT;
  END;
  END LOOP;           
  END;















-- MgrScript_CLOSE_MISC -- ЗАКРЫТИЕ WA ТРАНЗАКЦИИ
-- CREATED ON 19.06.2018 BY U10097 
DECLARE 
  CNT NUMBER:=0;
  RES VARCHAR2(255);
  PSSLOG VARCHAR2(255);
  DID    NUMBER;
BEGIN
    
    FOR CUR IN (
      
SELECT AR.DOC__ID AS DOC_ID,
       AR.POSTING_DATE AS TR_DATE,
       OWS.XWAUTH_RECORD('CREDIT_STATUS',AR.CREDIT_STATUS)||' - '||
       OWS.XWAUTH_RECORD('POSTING_STATUS',AR.POSTING_STATUS)||' / '||AR.DOC__ID||' # '||AR.TRANS_TYPE||' - '||AR.TARGET_NUMBER AS INFO,
       OWS.XWAUTH_RECORD('POSTING_STATUS',AR.POSTING_STATUS),AR.POSTING_STATUS,AR.TRANS_TYPE
  FROM OWS.AUTH_RECORD AR 
 WHERE AR.CREDIT_STATUS='A'
       AND AR.SERVICE_CLASS='M'
       AND AR.ACNT_CONTRACT__OID IN (28090471,28090386,28090400,28090580,26925429)
       
      )

  LOOP SELECT DOC.ID INTO DID FROM OWS.DOC DOC WHERE DOC.ID=CUR.DOC_ID AND DOC.AMND_STATE='A';
       
       IF DID IS NOT NULL THEN RES:=OWS.chck.CLOSE_MISC(CUR.DOC_ID);
       ELSE RES:='NULL DOC';
       END IF;
  
       DBMS_OUTPUT.put_line(RES||' INFO= '|| CUR.DOC_ID||' - '||CUR.TR_DATE);      
       
       CNT:= CNT+1;
       IF CNT = 100
          THEN COMMIT;  
               CNT:=0; 
       END IF;
  END LOOP;
  COMMIT;
END;


